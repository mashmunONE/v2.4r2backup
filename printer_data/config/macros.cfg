#####################################################################
#   Macros
#####################################################################
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: STARI_QGL
gcode:
    CLEAN_NOZZLE
    STARI_QGL
    PARK

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    SET_LED LED=caselight RED=0.5 GREEN=0.5 BLUE=0.5
    SET_FAN_SPEED FAN=Nevermore SPEED=0.8
    M104 S140 ; start heating hotend to 140C
    STATUS_HEATING
    M190 S{BED_TEMP} ; wait for bed to reach temperature
    BED_MESH_PROFILE LOAD=default
    G92 E0 ; Reset Extruder
    STATUS_HOMING
    G28 ; Home all axes
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28 Z
    STATUS_MESHING
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    G28 Z
    G90
    G1 X150 Y150 Z50 F3000 ; parkposition until hotend reaches temperature
    STATUS_HEATING
    M109 S{EXTRUDER_TEMP} ; wait for hotend to reach temperature
    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_PRINTING
    VORON_PURGE
    SET_FAN_SPEED FAN=Nevermore SPEED=0.8

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_LED LED=caselight RED=0.0 GREEN=0.2 BLUE=0.0
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180

    
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 285
variable_start_y: 305
variable_start_z: 3.5
variable_wipe_dist: -50
variable_wipe_qty: 10
variable_wipe_spd: 300
variable_raise_distance: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}
 UPDATE_DELAYED_GCODE ID=filter_off DURATION=180


[gcode_macro LED_On]
gcode:
   SET_LED LED=caselight RED=0.5 GREEN=0.5 BLUE=0.5

[gcode_macro LED_Off]
gcode:
   SET_LED LED=caselight RED=0.0 GREEN=0.0 BLUE=0.0
   STATUS_OFF

[gcode_macro M600]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
  {% set default_e = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
    {% if 'bowden_len' in svv %}
      {% set default_e = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set e = params.E|default(default_e)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK X={x} Y={y} Z={z}
    M702 U{e}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  65
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  95
variable_purge_distance:  5
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state